#
# aliases and other goodies
#

function rnr_node() {
    # rebuild and run docker container

    echo "--> cd /sv/node";
    cd /sv/node;

    echo "--> sudo docker stop mdb-node-www";
    sudo docker stop mdb-node-www;

    echo "--> sudo docker rm mdb-node-www";
    sudo docker rm mdb-node-www;

    echo "--> sudo docker rmi -f mdb-node-www";
    sudo docker rmi -f mdb-node-www;

    echo "--> sudo docker build -t mdb-node-www .";
    sudo docker build -t mdb-node-www .;

    echo "--> sudo docker run --detach -p 80:80 --name mdb-node-www -v /sv/node/lib:/app/lib mdb-node-www";
    sudo docker run --detach -p 80:80 \
                    -v /sv/node/lib:/app/lib \
                    --name mdb-node-www mdb-node-www
}

function rnr_mongo() {
    # rebuild and run docker container

    echo "--> cd /sv/mongo";
    cd /sv/mongo;

    echo "--> sudo docker stop mdb-mongo";
    sudo docker stop mdb-mongo;

    echo "--> sudo docker rm mdb-mongo";
    sudo docker rm mdb-mongo;

    echo "--> sudo docker rmi -f mdb-mongo";
    sudo docker rmi -f mdb-mongo;

    echo "--> sudo docker build -t mdb-mongo .";
    sudo docker build -t mdb-mongo .;

    echo "--> sudo docker run --detach -p 27017:27017 -v /tmp/mongo-training:/data/db --name mdb-mongo mdb-mongo";
    sudo docker run --detach -p 27017:27017 \
                    -v /tmp/mongo-training:/data/db \
                    --name mdb-mongo mdb-mongo
}

function rnr_graphql() {
    echo "--> cd /sv/graphql";
    cd /sv/graphql;

    echo "--> sudo docker stop mdb-graphql";
    sudo docker stop mdb-graphql;

    echo "--> sudo docker rm mdb-graphql";
    sudo docker rm mdb-graphql;

    echo "--> sudo docker rmi -f mdb-graphql";
    sudo docker rmi -f mdb-graphql;

    echo "--> sudo docker build -t mdb-graphql .";
    sudo docker build -t mdb-graphql .;

    echo "--> sudo docker run --detach -p 4000:4000 -v /sv/graphql/lib:/app/lib --name mdb-graphql mdb-graphql";
    sudo docker run --detach -p 4000:4000 -v /sv/graphql/lib:/app/lib --name mdb-graphql mdb-graphql
}

function gh() { echo "history | grep $1"; history | grep "$1"; };

function mdbfind() { find . -iname "$1" -print0 | xargs -0 ls -al; }

alias sd='sudo docker'
alias k='sudo kubectl'
alias pods='sudo kubectl get pods'

alias s='stty sane; echo ""; clear;'
alias l='ls -l'
alias cls='clear'
alias rm='rm -i'
alias mv='mv -i'
alias cp='cp -i'
alias man='man -a'
alias grep='grep -n --color=auto'
alias lh='ls -lt | head -30'
alias h='history'

txtblk='\e[0;30m' # Black - Regular
txtred='\e[0;31m' # Red
txtgrn='\e[0;32m' # Green
txtylw='\e[0;33m' # Yellow
txtblu='\e[0;34m' # Blue
txtpur='\e[0;35m' # Purple
txtcyn='\e[0;36m' # Cyan
txtwht='\e[0;37m' # White
bldblk='\e[1;30m' # Black - Bold
bldred='\e[1;31m' # Red
bldgrn='\e[1;32m' # Green
bldylw='\e[1;33m' # Yellow
bldblu='\e[1;34m' # Blue
bldpur='\e[1;35m' # Purple
bldcyn='\e[1;36m' # Cyan
bldwht='\e[1;37m' # White
unkblk='\e[4;30m' # Black - Underline
undred='\e[4;31m' # Red
undgrn='\e[4;32m' # Green
undylw='\e[4;33m' # Yellow
undblu='\e[4;34m' # Blue
undpur='\e[4;35m' # Purple
undcyn='\e[4;36m' # Cyan
undwht='\e[4;37m' # White
bakblk='\e[40m'   # Black - Background
bakred='\e[41m'   # Red
bakgrn='\e[42m'   # Green
bakylw='\e[43m'   # Yellow
bakblu='\e[44m'   # Blue
bakpur='\e[45m'   # Purple
bakcyn='\e[46m'   # Cyan
bakwht='\e[47m'   # White
txtrst='\e[0m'    # Text Reset

# for vagrant
# export PS1="\[$txtgrn\] @vagrant: \[$bldwht\]\w\[$bldcyn\]> \[$txtrst\]"
export PS1="\[$bldred\]`hostname`: \[$bldgrn\]\$PWD\[$bldred\]> \[$txtrst\]"
